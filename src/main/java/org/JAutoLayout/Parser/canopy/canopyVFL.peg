grammar VFL
visualFormatString <- (orientation ":")? (superview connection)? view (connection view)* (connection superview)?
orientation <- "H"/"V"
superview <- "|"
view <- "[" viewName (predicateListWithParens)? "]"
connection <- "-" predicateList "-" / "-" / ""
predicateList <- simplePredicate / predicateListWithParens
simplePredicate <- metricName / positiveNumber
predicateListWithParens <- "(" predicate ("," predicate)* ")"
predicate <- (relation)? objectOfPredicate ("@" priority)?
relation <- "==" / "<=" / ">="
objectOfPredicate <- constant / viewName
priority <- metricName / number
constant <- metricName / number
viewName <-  [a-zA-Z_] [a-zA-Z0-9_]*
metricName <-  [a-zA-Z_] [a-zA-Z0-9_]*
positiveNumber <- [+]? [0-9]* ("." [0-9]+)?
number <- [-+]? [0-9]* ("." [0-9]+)?